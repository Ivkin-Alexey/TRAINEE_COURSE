// Как исправить "одни пятёрки"?
// Ответ: нужно заменить var на let в цикле for. Благодаря этому на каждой итерации цикла будет создаваться новая
// переменная i со своим значением. Эта переменная будет замкнута в функции, которую мы добаляем в массив. До замены var
// на let переменная i всплывала в глобальную область видимости, в результате чего в массиве хранились функции
// с одной и той же замкнутой переменной. После выполнения цикла её значение становилось равной 5, в результате чего
// при вызове любой функции из массива мы получали 5

var result = [];
for (let i = 0; i < 5; i++) {
    result[i] = function () {
        console.log(i);
    };
}
result[0](); //0
result[1](); //1
result[2](); //2
result[3](); //3
result[4](); //4

////////////////////////////////////////////////

// Ответ: поправить код ниже можно заменив цикл while на for, или введя дополнительную переменную внутри цикла. Первый
// способ написан выше, поэтому введем новую переменную j. В этом случае на каждой итерации цикла будет создаваться
// новая переменная j, которя будет замкнута внутри функции, сохраняемой в массиве.

function getGroup() {
    let students = [];
    let i = 0;
    while (i < 10) {
        let j = i;
        students[i] = function() {
            console.log(j);
        }
        i++
    }

    return students;
}

let group = getGroup();

group[0](); // 0
group[5](); // 5
//
// ////////////////////////////////////////////////
//
// // Напишите функцию multiply, должна принимать произвольное количество аргументов и возвращать их произведение.

function multiply(x) {
    return function (y) {
        if (y) return multiply(x*y);
        else return x;
    };
}

const result1 = multiply(2)(3)(4)();
console.log(result1); // Вывод: 24
const result2 = multiply(2)(3)(4)(5)();
console.log(result2); // Вывод: 120
//
// const result1 = multiply(2)(3)(4);
//
// // Пример использования:
// const result1 = multiply(2)(4);
// console.log(result1); // Вывод: 8
//
// const result2 = multiply(5)(2)(3);
// console.log(result2); // Вывод: 30
//
// ///////////////////////
// // Написать функцию getUniqArray(arr), которая на вход принимает массив чисел и
// // возвращает массив уникальных чисел.
// //     Если аргумент arr состоит не из чисел, тогда функция должна выбросить ошибку.
// //     Текст ошибки: "В getUniqArray был передан невалидный параметр. Аргумент arr
// // должен быть массивом чисел".
//


console.log(getUniqArray([1, 1, 2, 3, 4, 4, 4, 5]));
console.log(getUniqArray([1, 1, 2, 3, 4, "d", 4, 4, 5]));

function getUniqArray(arr) {
    function check(array) {
        let isOK = true;
        for(let i = 0; i < array.length; i++) {
            if(typeof array[i] !== "number") {
                isOK = false;
                break;
            }
        }
        return isOK;
    }

    if (check(arr)) return [...new Set(arr)];
    else throw new Error("В getUniqArray был передан невалидный параметр. Аргумент arr должен быть массивом чисел");
}
